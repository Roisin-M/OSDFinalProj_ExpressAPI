@endpoint=http://localhost:3000/yoga-studio-management-api/v1/auth
@endpointInstructor=http://localhost:3000/yoga-studio-management-api/v1/instructors

# @name login
POST {{endpoint}} HTTP/3.0
content-type: application/json

{ 
  "email": "joiisuser@gmail.com",
  "password": "@Hi1234567"
}
###
@accessToken = {{login.response.body.accessToken}}

DELETE http://localhost:3000/yoga-studio-management-api/v1/users/67656e6409b765c3f9927f69 HTTP/1.1
content-type: application/json
Authorization: Bearer {{accessToken}}

###

//If the token has timed out or has the wrong signature you will get a 403.
//If the token is not attached you will get a 401
//If the token is OK but there is no user with that ID you will get a 404.

# @name logout
POST {{endpoint}}/logout HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}
###

# @name login2
POST {{endpoint}} HTTP/3.0
content-type: application/json

{ 
  "email": "updatedemail@example.com",
  "password": "@Hi12345"
}
###
@accessToken2 = {{login.response.body.accessToken}}

# Instructor Login - Valid
# @name loginInstructor
POST {{endpoint}}/instructor HTTP/1.1
Content-Type: application/json

{
  "email": "email@example.com",
  "password": "@Hi12345"
}
###
@instructorAccessToken = {{loginInstructor.response.body.accessToken}}

# Instructor Login - Invalid Password
# @name loginInstructorInvalidPassword
POST {{endpoint}}/instructor HTTP/1.1
Content-Type: application/json

{
  "email": "theemail@example.com",
  "password": "WrongPass123!"
}
###
# Expected: HTTP 401 Invalid email or password

# Instructor Login - Nonexistent Email
# @name loginInstructorNonexistent
POST {{endpoint}}/instructor HTTP/1.1
Content-Type: application/json

{
  "email": "nonexistent@example.com",
  "password": "@Hi12345"
}
###
# Expected: HTTP 401 Invalid email or password

# Instructor Logout
# @name logoutInstructor
POST {{endpoint}}/instructor/logout HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{instructorAccessToken}}
###

# @name getMyClasses
GET {{endpointInstructor}}/67e43ffe6964c7241b2c5fcd/classes HTTP/1.1
Authorization: Bearer {{instructorAccessToken}}
Content-Type: application/json
 ###